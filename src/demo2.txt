 =========================   JSX file =======================

 import React, { useState } from "react";
import slugify from "react-slugify";

function Recipe() {
  const [recipeName, setRecipeName] = useState("");
  const [slug, setSlug] = useState("");

  // for adding empty ingredient input
  const [ingredients, setIngredients] = useState([
    { quantity: "", unit: "", name: "", extraNote: "" },
  ]);

  // add new ingredient
  const handleAddIngredient = () => {
    setIngredients([...ingredients, {}]);
  };

  // for dynamic slug
  const handleRecipeChange = (event) => {
    const recipeName = event.target.value;
    setRecipeName(recipeName);

    const slugValue = slugify(recipeName, { delimiter: "_" });
    setSlug(slugValue);
  };

  const onHandleSubmit = () => {};

  return (
    <>
      <center>
        <h1 className="heading my-3">Recipe Details</h1>
      </center>
      <form className="mx-auto">
        <br />
        <div className="form-group row">
          <label className="col-sm-2 col-form-label">Recipe Name :</label>
          <div className="col-sm-10">
            <input
              type="text"
              className="form-control"
              id="recipeName"
              value={recipeName}
              onChange={handleRecipeChange}
            />
          </div>
        </div>
        <br />

        <div className="form-group row">
          <label className="col-sm-2 col-form-label">Slug :</label>
          <div className="col-sm-10">
            <input
              type="text"
              className="form-control"
              id="slug"
              value={slug}
              readOnly
            />
            {/* <p>{slug}</p> */}
          </div>
        </div>
        <br />

        <div className="form-group row">
          <label className="col-sm-2 col-form-label">Image :</label>
          <div className="col-sm-10">
            <input type="file" className="form-control" id="recipeImage" />
          </div>
        </div>
        <br />

        <div className="form-group row">
          <label className="col-sm-2 col-form-label">Description :</label>
          <div className="col-sm-10">
            <textarea
              className="form-control"
              id="recipeDescription"
              rows="6"
            ></textarea>
          </div>
        </div>
        <br />

        <div className="form-group row">
          <label className="col-sm-2 col-form-label">Cooking Time :</label>
          <div className="col-sm-10">
            <input type="text" className="form-control" id="cookingTime" />
          </div>
        </div>
        <br />

        <div className="form-group row">
          <label className="col-sm-2 col-form-label">Additional Note :</label>
          <div className="col-sm-10">
            <input type="text" className="form-control" id="additionalNote" />
          </div>
        </div>
        <br />

        <center>
          <h1 className="heading">Add Ingredients</h1>
        </center>
        <br />
        <div id="ingredients" className="container">
          <div className="container mt-4 ">
            {ingredients.map((ingredient, index) => (
              <div className="row my-3" key={index}>
                <div className="col">
                  <label className="sr-only">Quantity</label>
                  <input
                    type="number"
                    className="form-control"
                    placeholder="Quantity"
                    id="Quantity"
                  />
                </div>
                <div className="col">
                  <label className="sr-only">Unit</label>
                  <input
                    type="text"
                    className="form-control"
                    placeholder="Unit"
                  />
                </div>
                <div className="col">
                  <label className="sr-only">Name</label>
                  <input
                    type="text"
                    className="form-control"
                    placeholder="Name"
                  />
                </div>
                <div className="col">
                  <label className="sr-only">Extra Note</label>
                  <input
                    type="text"
                    className="form-control"
                    placeholder="Extra Note"
                  />
                </div>
              </div>
            ))}
            <button
              type="button"
              className="btn btn-primary my-3"
              onClick={handleAddIngredient}
            >
              Add
            </button>
          </div>
        </div>
        {/* ============================ */}

        <br />

        <center>
          <button
            type="button"
            className="btn btn-success"
            onClick={onHandleSubmit}
          >
            Submit
          </button>
        </center>
      </form>
    </>
  );
}

export default Recipe;


====================== slice file ================================

import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  recipeName: "",
  slug: "",
  ingredients: [],
  image: null,
  description: "",
  cookingTime: "",
  additionalNote: "",
};

const recipeSlice = createSlice({
  name: "recipe",
  initialState,
  reducers: {
    setRecipeField: (state, action) => {
      const { field, value } = action.payload;
      state[field] = value;
    },
    addIngredient: (state, action) => {
      state.ingredients.push(action.payload);
    },
    submitRecipeData: (state) => {},
  },
});

export const { setRecipeField, addIngredient, submitRecipeData } =
  recipeSlice.actions;

export default recipeSlice.reducer;
